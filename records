import java.util.Scanner;

class Student {
    private String name;
    private int id;
    private double[] grades;
    private int[] attendance;
    private static final int NUMBER_OF_SUBJECTS = 5;

    public Student(String name, int id) {
        this.name = name;
        this.id = id;
        this.grades = new double[NUMBER_OF_SUBJECTS];
        this.attendance = new int[NUMBER_OF_SUBJECTS];
    }

    public String getName() {
        return name;
    }

    public int getId() {
        return id;
    }

    public double getGrade(int subjectIndex) {
        return grades[subjectIndex];
    }

    public void setGrade(int subjectIndex, double grade) {
        grades[subjectIndex] = grade;
    }

    public int getAttendance(int subjectIndex) {
        return attendance[subjectIndex];
    }

    public void setAttendance(int subjectIndex, int daysPresent) {
        attendance[subjectIndex] = daysPresent;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("ID: ").append(id).append(", Name: ").append(name).append("\n");
        for (int i = 0; i < NUMBER_OF_SUBJECTS; i++) {
            sb.append("Subject ").append(i + 1).append(": Grade: ").append(grades[i])
                    .append(", Attendance: ").append(attendance[i]).append(" days\n");
        }
        return sb.toString();
    }
}

class StudentRecordsSystem {
    private Student[] students;
    private int studentCount;
    private Scanner scanner;

    public StudentRecordsSystem(int capacity) {
        students = new Student[capacity];
        studentCount = 0;
        scanner = new Scanner(System.in);
    }

    public void addStudent() {
        if (studentCount >= students.length) {
            System.out.println("No more space to add new students.");
            return;
        }
        System.out.print("Enter student ID: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        System.out.print("Enter student name: ");
        String name = scanner.nextLine();
        students[studentCount++] = new Student(name, id);
        System.out.println("Student added successfully!");
    }

    public void viewStudent() {
        System.out.print("Enter student ID to view: ");
        int id = scanner.nextInt();
        boolean found = false;
        for (int i = 0; i < studentCount; i++) {
            if (students[i].getId() == id) {
                System.out.println(students[i]);
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Student not found!");
        }
    }

    public void updateStudent() {
        System.out.print("Enter student ID to update: ");
        int id = scanner.nextInt();
        boolean found = false;
        for (int i = 0; i < studentCount; i++) {
            if (students[i].getId() == id) {
                System.out.print("Enter subject index (1 to 5) to update (1-based index): ");
                int subjectIndex = scanner.nextInt() - 1;
                if (subjectIndex >= 0 && subjectIndex < 5) {
                    System.out.print("Enter new grade: ");
                    double newGrade = scanner.nextDouble();
                    students[i].setGrade(subjectIndex, newGrade);

                    System.out.print("Enter days present: ");
                    int daysPresent = scanner.nextInt();
                    students[i].setAttendance(subjectIndex, daysPresent);

                    System.out.println("Student details updated successfully!");
                } else {
                    System.out.println("Invalid subject index.");
                }
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Student not found!");
        }
    }

    public void listStudents() {
        if (studentCount == 0) {
            System.out.println("No students in the records.");
        } else {
            for (int i = 0; i < studentCount; i++) {
                System.out.println(students[i]);
            }
        }
    }

    public void start() {
        while (true) {
            System.out.println("Student Records System");
            System.out.println("1. Add Student");
            System.out.println("2. View Student");
            System.out.println("3. Update Student Details");
            System.out.println("4. List All Students");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    addStudent();
                    break;
                case 2:
                    viewStudent();
                    break;
                case 3:
                    updateStudent();
                    break;
                case 4:
                    listStudents();
                    break;
                case 5:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid option, please try again.");
            }
        }
    }

    public static void main(String[] args) {
        StudentRecordsSystem system = new StudentRecordsSystem(10); // Limit to 10 students for this example
        system.start();
    }
}
